#!/usr/bin/env python
# IBM_PROLOG_BEGIN_TAG
# 
# Copyright 2003,2016 IBM International Business Machines Corp.
# 
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
# 
#           http://www.apache.org/licenses/LICENSE-2.0
# 
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
#  implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
# 
#  IBM_PROLOG_END_TAG

# script to save File Labels and Tags with which a file is associated

from __future__ import print_function

import argparse
import sys
import os
import os.path
import logging
import json
import vapi_core as vapi


def saveFileLabels(dsId, fileId, labels):
    result = None

    url = vapi.cfg["baseUrl"] + "/datasets/" + dsId + "/files/" + fileId + "/labels"
    headers = {'Content-type': 'application/json'}
    req = {"labels": labels}

    logging.debug("URL={}".format(url))
    logging.debug("req= {}".format(json.dumps(req)))

    rsp = vapi.post(url, headers=headers, data=json.dumps(req))
    if vapi.rspOk(rsp):
        result = rsp.json()
    else:
        logging.info("Failed to save labels, status={}, rsp={}".format(rsp.status,
                                                                       rsp.json()))
    return result


def loadLabelInfo(fpath):
    rtnLabels = None
    
    if os.path.exists(fpath) and os.path.isfile(fpath):
        with open(fpath) as labelFile:
            try:
                rtnLabels = json.load(labelFile)
            except json.decoder.JSONDecodeError as de:
                vapi.eprint("ERROR: Syntax error in label file '{}';".format(fpath))
                vapi.eprint("    {}".format(de.args))
                
    return rtnLabels


# Uses arparse to parse commandline options
#
# argparse "results" class is returned
#
def getInputs():
    results = None

    parser = argparse.ArgumentParser(description="Tool to save file labels to powerai vision")
    parser.add_argument('--dsid', action="store", dest="dsid", required=True,
                        help="ID of the dataset containing the target file")
    parser.add_argument('--fileid', action="store", dest="fileid", required=True,
                        help="ID of the file to which the labels are to be associated")
    parser.add_argument('--labelfile', action="store", dest="labelfile", required=True,
                        help="path to file containing the label information to save")

    try:
        results = parser.parse_args()

    except argparse.ArgumentTypeError as e:
        vapi.eprint("\n", e.args, "\n")
        parser.print_help(sys.stderr);
        results = None
        
    return results


if __name__ == '__main__':
    args = getInputs()

    if args is not  None:
        if vapi.loadCfgInfo() == 0:
            labelInfo = loadLabelInfo(args.labelfile)
            if labelInfo is not None:
                rsp = saveFileLabels(args.dsid, args.fileid, labelInfo)
                print(json.dumps(rsp, indent=2))
            else:
                vapi.eprint("Could not load labels from {}".format(args.labelfile))
                exit(3)
        else:
            vapi.eprint("Failed to load config file")
            exit(2)
    else:
        exit(1)

